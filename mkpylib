#!/bin/bash

set -e
set -x

dir="${1}"
shift 1
description="${1}"
shift 1

set +e

name="${1:-$dir}"
shift 1

python_version="${1:-^3.6}"
shift 1

license="${1:-MIT}"
shift 1

author="${1:-Shawn Presser}"
shift 1

# Personal website
website="${1:-https://www.shawwn.com}"
webname="${1:-shawwn.com}"
shift 1

# GitHub username
github="${1:-shawwn}"
shift 1

# Twitter username
twitter="${1:-theshawwn}"
shift 1

# Hacker News username
hn="${1:-sillysaurusx}"
shift 1

# Patreon username
patreon="${1:-shawwn}"
shift 1

set -e

poetry new --name "$name" "$dir" # --src 
cd "$dir"
rm -f pyproject.toml
poetry init --name "$name" --description "$description" --author "$author" --python "$python_version" --license "$license" --dev-dependency 'pytest@^5.2' --no-interaction
git init
#mv README.rst README.md
rm README.rst
cat > README.md << EOF
# ${name}

${description}.

WARNING: This repo is in development. It was automatically generated with [mkpylib](https://github.com/shawwn/scrap/blob/master/mkpylib). If you're reading this message, it means that I use this repo for my own purposes right now. It might not do anything at all; the default functionality is \`print('TODO')\`.

If you really want to try it out, feel free. I recommend reading through the code and commit history to see if it does what you need, or [ask me](#contact) for status updates.

Stay tuned!

## Quickstart

\`\`\`
python3 -m pip install -U ${name}
\`\`\`

(That strange-looking setup command is because I've found it to be the most reliable. The \`pip\` command often aliases to python 2, and \`pip3\` often installs to the wrong Python package directory.)

Once it's installed, you can do this:

\`\`\`py
import $(echo ${name} | sed s/-/_/g)

print('TODO')
\`\`\`

... which will print this:

\`\`\`
TODO
\`\`\`

## License

${license}

## Contact

A library by [${author}](${website}). If you found it useful, please consider [joining my patreon](https://www.patreon.com/${patreon})!

My Twitter DMs are always open; you should [send me one](https://twitter.com/${twitter})! It's the best way to reach me, and I'm always happy to hear from you.

- Twitter: [@${twitter}](https://twitter.com/${twitter})
- Patreon: [https://www.patreon.com/${patreon}](https://www.patreon.com/${patreon})
- HN: [${hn}](https://news.ycombinator.com/threads?id=${hn})
- Website: [${webname}](${website})

EOF
cat > .gitignore <<'EOF'
__pycache__
/.idea
/venv/
*.egg-info
/build/
/dist/
.env
# setup.py # actually, commit the stub setup.py file so that users can pip3 install -e .
/.hypothesis/
EOF

# generate a setup.py file so that `python3 -m install -e .` works.
# https://github.com/python-poetry/poetry/discussions/1135#discussioncomment-145763

# add setuptools to build-system requirements.
# TODO: figure out the not-cursed way to do this.
cat pyproject.toml \
 | sed 's/"setuptools", //' \
 | sed 's/requires = [\[]\(.*\)[]]/requires = ["setuptools", \1]/g' \
 | sed "s/\(version.*\)/\1\nreadme = \"README.md\"\nhomepage = \"https:\/\/github.com\/${github}\/${dir}\"/" \
 > pyproject.toml.tmp

cat >> pyproject.toml.tmp <<EOF

[tool.poetry.urls]
"${author}'s Website" = "${website}"
"Support ${author} on Patreon" = "https://www.patreon.com/${patreon}"
"@${twitter} on Twitter" = "https://www.twitter.com/${twitter}"
"${hn} on Hacker News" = "https://news.ycombinator.com/threads?id=${hn}"
EOF

mv pyproject.toml.tmp pyproject.toml

# produce a setup.py file
poetry build --format sdist
tar -xvf dist/*-`poetry version -s`.tar.gz -O '*/setup.py' > setup.py

# uninstall any existing version
python3 -m pip uninstall "${name}" -y

# install it locally, for development
python3 -m pip install -e .

git add .
git commit -m "Initial commit"

# automatically create the github repo
hub create "$dir" --description "$description"

git push --set-upstream origin master
